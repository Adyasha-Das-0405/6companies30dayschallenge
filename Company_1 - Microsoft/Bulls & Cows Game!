#include <string>
#include <unordered_map>
using namespace std;

class Solution {
public:
    string getHint(string secret, string guess) {
        int bulls = 0, cows = 0;
        unordered_map<char, int> count;

        for (int i = 0; i < secret.size(); i++) {
            if (secret[i] == guess[i]) {
                bulls++;
            } else {
                count[secret[i]]++;
            }
        }

        for (int i = 0; i < guess.size(); i++) {
            if (secret[i] != guess[i] && count[guess[i]] > 0) {
                cows++;
                count[guess[i]]--;
            }
        }

        return to_string(bulls) + "A" + to_string(cows) + "B";
    }
};

int main(){
    Solution solution ;
    string secret1 = "1807";
    string guess1 = "7810";
    cout << "Secret: " << secret1 << ", Guess: " << guess1 << " -> Output: " << solution.getHint(secret1, guess1) << endl;

    string secret2 = "1123";
    string guess2 = "0111";
    cout << "Secret: " << secret2 << ", Guess: " << guess2 << " -> Output: " << solution.getHint(secret2, guess2) << endl;

    string secret3 = "1234";
    string guess3 = "4321";
    cout << "Secret: " << secret3 << ", Guess: " << guess3 << " -> Output: " << solution.getHint(secret3, guess3) << endl;

    return 0;
}
